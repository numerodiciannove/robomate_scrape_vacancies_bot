from aiogram import Bot
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from app.telegram_bot.keyboards.work_ua_experience_generator_kb import experience_kb


class WorkUaState(StatesGroup):
    position = State()
    city = State()
    experience = State()

async def start_work_ua_parser(message: Message, state: FSMContext, bot: Bot) -> None:
    await state.clear()
    await bot.send_message(message.from_user.id, "–î–∞–≤–∞–π –ø–æ—á–Ω–µ–º–æüí´")
    await bot.send_message(
        message.from_user.id,
        (
            "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞ —è–∫—É –ø–æ—Å–∞–¥—É –≤–∏ —à—É–∫–∞—î—Ç–µ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤\n\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n\n"
            "–ö—É—Ö–∞—Ä\n\n"
            "üîÅ –∞–±–æ\n\n"
            "Python developer"
        ),
        reply_markup=None,
    )
    await state.set_state(WorkUaState.position)

async def register_cvs_position(message: Message, state: FSMContext, bot: Bot) -> None:
    await state.update_data(position=message.text)
    await bot.send_message(
        message.from_user.id,
        (
            "‚úçÔ∏è –ù–∞–ø–∏—à—ñ—Ç—å –º—ñ—Å—Ç–æ –≤ —è–∫–æ–º—É —à—É–∫–∞—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤\n\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n\n"
            "–ö–∏—ó–≤\n\n"
            "üîÅ –∞–±–æ\n\n"
            "–û–¥–µ—Å–∞"
        ),
        reply_markup=None
    )
    await state.set_state(WorkUaState.city)

async def register_cvs_city(message: Message, state: FSMContext, bot: Bot) -> None:
    await state.update_data(city=message.text)
    await bot.send_message(
        message.from_user.id,
        "‚úçÔ∏è –í–∏–±–µ—Ä—ñ—Ç—å –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞",
        reply_markup=await experience_kb(),
    )
    await state.set_state(WorkUaState.experience)

async def register_cvs_experience(message: Message, state: FSMContext, bot: Bot) -> None:
    experience = message.text
    await state.update_data(experience=experience)
    user_data = await state.get_data()
    position = user_data.get("position")
    city = user_data.get("city")

    await bot.send_message(
        message.from_user.id,
        (
            f"üîç –®—É–∫–∞—é –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—é '{position}' "
            f"—É –º—ñ—Å—Ç—ñ '{city}' –∑ –¥–æ—Å–≤—ñ–¥–æ–º '{experience}'."
        ),
        reply_markup=None
    )

async def answer_telegram_user_with_top5_cvs(message: Message, state: FSMContext, bot: Bot) -> None:
    user_data = await state.get_data()
    position = user_data.get("position")
    city = user_data.get("city")
    experience = user_data.get("experience")

    await bot.send_message(
        message.from_user.id,
        (
            f"üîç –û—Å—å —Ç–æ–ø-5 –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤ –Ω–∞ –ø–æ–∑–∏—Ü—ñ—é '{position}' "
            f"—É –º—ñ—Å—Ç—ñ '{city}' –∑ –¥–æ—Å–≤—ñ–¥–æ–º '{experience}'."
        ),
        reply_markup=None
    )
